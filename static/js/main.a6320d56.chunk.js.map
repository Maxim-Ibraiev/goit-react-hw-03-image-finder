{"version":3,"sources":["components/SearchBar/SearchBar.jsx","components/SearchBar/index.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGalleryItem/index.js","components/ImageGallery/ImageGallery.jsx","components/ImageGallery/index.js","components/Modal/index.js","components/Modal/Modal.jsx","components/Button/index.js","components/Button/Button.jsx","service/fetch.js","components/App/App.jsx","index.js"],"names":["SearchBar","onSubmit","className","type","autoComplete","autoFocus","placeholder","name","ImageGalleryItem","webformatURL","onOpenModal","largeImageURL","tags","onClick","src","alt","ImageGallery","images","map","id","Modal","handleKeydown","e","code","props","onToggleModal","document","addEventListener","this","removeEventListener","largeImage","color","height","width","Component","Button","text","onLoadMore","loading","axios","require","key","fetchImages","query","page","get","then","r","data","hits","App","state","querySearch","modalIsOpen","handleSubmit","preventDefault","queryInput","target","value","setState","handleOpenModal","handleToggleModal","prevState","handleFetch","a","addData","handleLoadMore","handleScroll","window","scrollTo","top","documentElement","scrollHeight","behavior","preProps","nextState","length","onCloseModal","handleCloseModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a6320d56.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport function SearchBar({ onSubmit }) {\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={onSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          name=\"querySearch\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default SearchBar;\r\n","import SearchBar from './SearchBar';\r\n\r\nexport default SearchBar;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport function ImageGalleryItem({\r\n  webformatURL,\r\n  onOpenModal,\r\n  largeImageURL,\r\n  tags,\r\n}) {\r\n  return (\r\n    <>\r\n      <li\r\n        className=\"ImageGalleryItem\"\r\n        onClick={() => onOpenModal(largeImageURL)}\r\n      >\r\n        <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  onOpenModal: PropTypes.func,\r\n  id: PropTypes.number,\r\n  tags: PropTypes.string,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from './ImageGalleryItem';\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nexport function ImageGallery({ images, onOpenModal }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ id, largeImageURL, webformatURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          largeImageURL={largeImageURL}\r\n          webformatURL={webformatURL}\r\n          onOpenModal={onOpenModal}\r\n          tags={tags}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array,\r\n  onOpenModal: PropTypes.func,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import ImageGallery from './ImageGallery';\r\n\r\nexport default ImageGallery;\r\n","import Modal from './Modal';\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport class Modal extends Component {\r\n  static propTypes = {\r\n    largeImage: PropTypes.string,\r\n    onToggleModal: PropTypes.func,\r\n    onCloseModal: PropTypes.func,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  handleKeydown = e => {\r\n    if (e.code === 'Escape') this.props.onToggleModal();\r\n  };\r\n\r\n  render() {\r\n    const { largeImage, onToggleModal } = this.props;\r\n    return (\r\n      <div className=\"Overlay\" onClick={onToggleModal}>\r\n        <Loader\r\n          className=\"loaderPosition\"\r\n          type=\"BallTriangle\"\r\n          color=\"#00BFFF\"\r\n          height={150}\r\n          width={150}\r\n        />\r\n        <div className=\"Modal\">\r\n          <img src={largeImage} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ text = 'Load more', onLoadMore, loading }) {\r\n  return (\r\n    <div className=\"ButtonContainer\">\r\n      {loading ? (\r\n        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n      ) : (\r\n        <button className=\"Button\" type=\"button\" onClick={onLoadMore}>\r\n          {text}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  onLoadMore: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n};\r\n","const axios = require('axios');\r\n\r\nconst key = '19175032-3cc6a7c5a21d8db9de954fc56';\r\n\r\nfunction fetchImages(query, page = 1) {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(r => r.data.hits);\r\n}\r\n\r\nexport { fetchImages };\r\n","import { Component } from 'react';\nimport SearchBar from '../SearchBar';\nimport ImageGallery from '../ImageGallery';\nimport Modal from '../Modal';\nimport Button from '../Button';\nimport { fetchImages } from '../../service/fetch';\n\nclass App extends Component {\n  state = {\n    images: [],\n    querySearch: '',\n    page: 1,\n    modalIsOpen: false,\n    largeImage: '',\n    loading: false,\n  };\n\n  async componentDidUpdate(preProps, nextState) {\n    const { querySearch, page } = this.state;\n\n    if (nextState.querySearch !== this.state.querySearch) {\n      this.setState({ images: [] });\n      this.handleFetch(querySearch);\n    } else if (nextState.page !== this.state.page) {\n      await this.handleFetch(querySearch, page);\n      this.handleScroll();\n      this.setState({ loading: false });\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const queryInput = e.target[1].value;\n\n    this.setState({ querySearch: queryInput });\n  };\n\n  handleOpenModal = largeImageURL => {\n    this.handleToggleModal();\n    this.setState({ largeImage: largeImageURL });\n  };\n\n  handleToggleModal = () => {\n    this.setState(prevState => ({ modalIsOpen: !prevState.modalIsOpen }));\n  };\n\n  handleFetch = async (query, page) => {\n    const addData = await fetchImages(query, page);\n\n    this.setState(prevState => {\n      const { images } = prevState;\n      const content = [...images, ...addData];\n\n      return { images: content, queryInput: '' };\n    });\n  };\n\n  handleLoadMore = () => {\n    this.setState(prevState => {\n      const nextPage = prevState.page + 1;\n\n      return {\n        page: nextPage,\n        loading: true,\n      };\n    });\n  };\n\n  handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  render() {\n    const { images, modalIsOpen, largeImage, loading } = this.state;\n\n    return (\n      <div>\n        <SearchBar onSubmit={this.handleSubmit} />\n\n        {images.length > 0 && (\n          <>\n            <ImageGallery images={images} onOpenModal={this.handleOpenModal} />\n\n            <Button loading={loading} onLoadMore={this.handleLoadMore} />\n          </>\n        )}\n\n        {modalIsOpen && (\n          <Modal\n            largeImage={largeImage}\n            onToggleModal={this.handleToggleModal}\n            onCloseModal={this.handleCloseModal}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}